투 포인터: 정렬된 두 배열의 원소 합이 정확히 X 가 되는 쌍이 존재하는지 O(N) 시간에 판별하라.

슬라이딩 윈도우: 길이 N 의 숫자 배열에서 연속 구간 합이 최대인 길이 K 구간의 합을 출력하라.

유니온-파인드(DSU): 실시간으로 주어지는 친구 관계 쌍마다 “이 둘이 속한 친구 그룹의 현재 인원 수”를 즉시 알려라.

MST (최소 신장 트리): N 개의 섬과 후보 해저 케이블 M 개의 비용이 주어질 때 모든 섬을 잇는 최소 총 비용을 구하라.

DFS: N × M 격자에서 ‘#’ 로 표시된 섬(연결 성분) 개수를 세어라.

BFS: 0-1 미로에서 시작점에서 출구까지의 최소 칸 이동 횟수를 구하라.

다익스트라: 양의 가중치 도로 그래프에서 한 출발 도시로부터 모든 도시까지의 최단 거리를 구하라.

벨만-포드: 음수 가중치가 있을 수 있는 단일 출발 그래프에서 최단 거리를 구하고, 음수 사이클 존재 여부도 판별하라.

플루이드-워셜: 최대 400 개의 도시 간 거리 행렬에서 모든 쌍 최단 거리를 한꺼번에 계산하라.

최소 공통 조상(LCA): 루트 트리가 주어질 때, 다수의 정점 쌍 쿼리에 대해 각 쌍의 공통 조상 중 가장 낮은 정점을 빠르게 답하라.

위상 정렬: 작업 간 선후관계 M 개가 주어진 DAG에서 모든 작업을 순서대로 수행할 수 있는 한 가지 정렬 결과를 출력하라.

0/1 배낭 문제: 용량 W 를 초과하지 않도록 N 개의 물건(무게·가치)을 선택해 얻을 수 있는 최대 총 가치를 구하라.